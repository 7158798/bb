
package com.zhguser.service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "UserService", targetNamespace = "http://service/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface UserService {


    /**
     * 
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "register", targetNamespace = "http://service/", className = "com.zhguser.service.Register")
    @ResponseWrapper(localName = "registerResponse", targetNamespace = "http://service/", className = "com.zhguser.service.RegisterResponse")
    @Action(input = "http://service/UserService/registerRequest", output = "http://service/UserService/registerResponse")
    public int register(
        @WebParam(name = "arg0", targetNamespace = "")
        User arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns com.zhguser.service.User
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://service/", className = "com.zhguser.service.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://service/", className = "com.zhguser.service.LoginResponse")
    @Action(input = "http://service/UserService/loginRequest", output = "http://service/UserService/loginResponse")
    public User login(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns com.zhguser.service.User
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateEmail", targetNamespace = "http://service/", className = "com.zhguser.service.UpdateEmail")
    @ResponseWrapper(localName = "updateEmailResponse", targetNamespace = "http://service/", className = "com.zhguser.service.UpdateEmailResponse")
    @Action(input = "http://service/UserService/updateEmailRequest", output = "http://service/UserService/updateEmailResponse")
    public User updateEmail(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns com.zhguser.service.User
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateMobile", targetNamespace = "http://service/", className = "com.zhguser.service.UpdateMobile")
    @ResponseWrapper(localName = "updateMobileResponse", targetNamespace = "http://service/", className = "com.zhguser.service.UpdateMobileResponse")
    @Action(input = "http://service/UserService/updateMobileRequest", output = "http://service/UserService/updateMobileResponse")
    public User updateMobile(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns com.zhguser.service.User
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateSex", targetNamespace = "http://service/", className = "com.zhguser.service.UpdateSex")
    @ResponseWrapper(localName = "updateSexResponse", targetNamespace = "http://service/", className = "com.zhguser.service.UpdateSexResponse")
    @Action(input = "http://service/UserService/updateSexRequest", output = "http://service/UserService/updateSexResponse")
    public User updateSex(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns com.zhguser.service.User
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updatePassword", targetNamespace = "http://service/", className = "com.zhguser.service.UpdatePassword")
    @ResponseWrapper(localName = "updatePasswordResponse", targetNamespace = "http://service/", className = "com.zhguser.service.UpdatePasswordResponse")
    @Action(input = "http://service/UserService/updatePasswordRequest", output = "http://service/UserService/updatePasswordResponse")
    public User updatePassword(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @return
     *     returns java.lang.Long
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUserCount", targetNamespace = "http://service/", className = "com.zhguser.service.GetUserCount")
    @ResponseWrapper(localName = "getUserCountResponse", targetNamespace = "http://service/", className = "com.zhguser.service.GetUserCountResponse")
    @Action(input = "http://service/UserService/getUserCountRequest", output = "http://service/UserService/getUserCountResponse")
    public Long getUserCount();

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllUsers", targetNamespace = "http://service/", className = "com.zhguser.service.GetAllUsers")
    @ResponseWrapper(localName = "getAllUsersResponse", targetNamespace = "http://service/", className = "com.zhguser.service.GetAllUsersResponse")
    @Action(input = "http://service/UserService/getAllUsersRequest", output = "http://service/UserService/getAllUsersResponse")
    public List<Object> getAllUsers();

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUserList", targetNamespace = "http://service/", className = "com.zhguser.service.GetUserList")
    @ResponseWrapper(localName = "getUserListResponse", targetNamespace = "http://service/", className = "com.zhguser.service.GetUserListResponse")
    @Action(input = "http://service/UserService/getUserListRequest", output = "http://service/UserService/getUserListResponse")
    public List<Object> getUserList(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns com.zhguser.service.User
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUser", targetNamespace = "http://service/", className = "com.zhguser.service.GetUser")
    @ResponseWrapper(localName = "getUserResponse", targetNamespace = "http://service/", className = "com.zhguser.service.GetUserResponse")
    @Action(input = "http://service/UserService/getUserRequest", output = "http://service/UserService/getUserResponse")
    public User getUser(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isUserNameExists", targetNamespace = "http://service/", className = "com.zhguser.service.IsUserNameExists")
    @ResponseWrapper(localName = "isUserNameExistsResponse", targetNamespace = "http://service/", className = "com.zhguser.service.IsUserNameExistsResponse")
    @Action(input = "http://service/UserService/isUserNameExistsRequest", output = "http://service/UserService/isUserNameExistsResponse")
    public boolean isUserNameExists(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isEmailExists", targetNamespace = "http://service/", className = "com.zhguser.service.IsEmailExists")
    @ResponseWrapper(localName = "isEmailExistsResponse", targetNamespace = "http://service/", className = "com.zhguser.service.IsEmailExistsResponse")
    @Action(input = "http://service/UserService/isEmailExistsRequest", output = "http://service/UserService/isEmailExistsResponse")
    public boolean isEmailExists(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isMobileExists", targetNamespace = "http://service/", className = "com.zhguser.service.IsMobileExists")
    @ResponseWrapper(localName = "isMobileExistsResponse", targetNamespace = "http://service/", className = "com.zhguser.service.IsMobileExistsResponse")
    @Action(input = "http://service/UserService/isMobileExistsRequest", output = "http://service/UserService/isMobileExistsResponse")
    public boolean isMobileExists(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns com.zhguser.service.User
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findUserById", targetNamespace = "http://service/", className = "com.zhguser.service.FindUserById")
    @ResponseWrapper(localName = "findUserByIdResponse", targetNamespace = "http://service/", className = "com.zhguser.service.FindUserByIdResponse")
    @Action(input = "http://service/UserService/findUserByIdRequest", output = "http://service/UserService/findUserByIdResponse")
    public User findUserById(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findUsers", targetNamespace = "http://service/", className = "com.zhguser.service.FindUsers")
    @ResponseWrapper(localName = "findUsersResponse", targetNamespace = "http://service/", className = "com.zhguser.service.FindUsersResponse")
    @Action(input = "http://service/UserService/findUsersRequest", output = "http://service/UserService/findUsersResponse")
    public List<Object> findUsers(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2);

    /**
     * 
     * @param arg0
     * @return
     *     returns com.zhguser.service.User
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findUserByUsername", targetNamespace = "http://service/", className = "com.zhguser.service.FindUserByUsername")
    @ResponseWrapper(localName = "findUserByUsernameResponse", targetNamespace = "http://service/", className = "com.zhguser.service.FindUserByUsernameResponse")
    @Action(input = "http://service/UserService/findUserByUsernameRequest", output = "http://service/UserService/findUserByUsernameResponse")
    public User findUserByUsername(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.Long
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUserCountWithFilter", targetNamespace = "http://service/", className = "com.zhguser.service.GetUserCountWithFilter")
    @ResponseWrapper(localName = "getUserCountWithFilterResponse", targetNamespace = "http://service/", className = "com.zhguser.service.GetUserCountWithFilterResponse")
    @Action(input = "http://service/UserService/getUserCountWithFilterRequest", output = "http://service/UserService/getUserCountWithFilterResponse")
    public Long getUserCountWithFilter(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

}
